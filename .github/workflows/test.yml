name: Lint & Test

on:
  push:
    branches:
      - master
      - release
  # Run master pipeline every day at midnight
  schedule:
    - cron: "0 0 * * *"
  pull_request:

jobs:
  # This uses the toolchain defined in rust-toolchain, NOT what's defined above
  fmt:
    name: "Rustfmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('rust-toolchain') }}

      # Enable after https://github.com/actions-rs/toolchain/issues/126
      # - name: Install Rust
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: ${{ matrix.rust }}
      #     override: true
      #     profile: minimal
      #     components: clippy

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  # Run clippy and tests for both stable and nightly, and every target
  lint-test:
    name: "Lint & Test"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          # If you update stable, make sure to update Cargo.toml
          - "1.56"
          # If you update nightly, make sure to update rust-toolchain.toml
          - nightly-2021-12-10
        target:
          # Don't bother testing all targets because linting should only be
          # different for wasm vs non-wasm
          - x86_64-unknown-linux-gnu
          - wasm32-unknown-unknown
        exclude:
          - rust: "1.56"
            target: wasm32-unknown-unknown
    env:
      # This overrides rust-toolchain.toml
      RUSTUP_TOOLCHAIN: ${{ matrix.rust }}
      CARGO_BUILD_TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@master

      - name: Cache Rust files
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ matrix.target }}-${{ hashFiles('Cargo.lock') }}

      # Enable after https://github.com/actions-rs/toolchain/issues/126
      # - name: Install Rust
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     toolchain: ${{ matrix.rust }}
      #     override: true
      #     profile: minimal
      #     components: clippy

      - name: Install Rustup Dependencies
        run: |
          rustup target add ${{ matrix.target }}
          rustup component add clippy

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D clippy::all

      - name: Tests
        uses: actions-rs/cargo@v1
        # Tests don't work on wasm
        if: ${{ matrix.target }} != wasm32-unknown-unknown
        with:
          command: test
